{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2","program":"/Users/riccardo/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"serde\"","--cfg","feature=\"serde-1\"","-C","metadata=ce6156aea7a2c5d2","-C","extra-filename=-ce6156aea7a2c5d2","--out-dir","/Users/riccardo/github/PhotoStack/photo-stack-back/rust_server/target/rls/debug/deps","-L","dependency=/Users/riccardo/github/PhotoStack/photo-stack-back/rust_server/target/rls/debug/deps","--extern","serde=/Users/riccardo/github/PhotoStack/photo-stack-back/rust_server/target/rls/debug/deps/libserde-69a0a1bdcfee9a5d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/riccardo/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/riccardo/github/PhotoStack/photo-stack-back/rust_server/target/rls/debug/deps/libindexmap-ce6156aea7a2c5d2.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[4300182626328512907,4023673918333175972]},"crate_root":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src","external_crates":[{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11705364677140973079,7726573435499814070]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9133280923345920065,5169035037401655959]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9811081489243518189,10016862334390338995]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16815776717140451016,2925157999366951619]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5571127662207602070,12081818010283277997]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9872675523737343627,13016261367480270594]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5564630398057371063,5134587089964058144]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[7317189895424764231,14908133925595887831]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7982293983073241509,18348097174152154939]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3938710137457602349,12366108798000803370]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[124527115135685225,16528639863833681107]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14633564717342525671,15444589222019281189]}},{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","num":13,"id":{"name":"serde","disambiguator":[13961163198009728139,12886123509991635658]}}],"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1,"byte_end":2026,"line_start":2,"line_end":78,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":46578,"byte_end":46589,"line_start":4,"line_end":4,"column_start":23,"column_end":34},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":446}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":844,"byte_end":854,"line_start":34,"line_end":34,"column_start":21,"column_end":31},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1016},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":869,"byte_end":877,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":892,"byte_end":900,"line_start":36,"line_end":36,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1,"byte_end":2026,"line_start":2,"line_end":78,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":17},{"krate":0,"index":91},{"krate":0,"index":102},{"krate":0,"index":111},{"krate":0,"index":137},{"krate":0,"index":446},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":1087},{"krate":0,"index":1092},{"krate":0,"index":1090},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":1093},{"krate":0,"index":1107},{"krate":0,"index":1103},{"krate":0,"index":1099},{"krate":0,"index":964}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1,"byte_end":22,"line_start":2,"line_end":2,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/equivalent.rs","byte_start":9505,"byte_end":9515,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/equivalent.rs","byte_start":9603,"byte_end":9613,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"fn (&self, key: &K) -> bool","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":9928,"byte_end":9941,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":118},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":10490,"byte_end":10501,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":10513,"byte_end":10516,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":120},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":10527,"byte_end":10532,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":10608,"byte_end":10621,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &mut Self::Key, &mut Self::Value)>","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":11038,"byte_end":11045,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"fn <F> (&mut self, keep: F) -> ()","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":11333,"byte_end":11349,"line_start":43,"line_end":43,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"fn (&self) -> PrivateMarker","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":975},{"krate":0,"index":979},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":177},{"krate":0,"index":233},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":286},{"krate":0,"index":292},{"krate":0,"index":298},{"krate":0,"index":304},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":335},{"krate":0,"index":341},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":359},{"krate":0,"index":366},{"krate":0,"index":371},{"krate":0,"index":377},{"krate":0,"index":388},{"krate":0,"index":394},{"krate":0,"index":399},{"krate":0,"index":409},{"krate":0,"index":414},{"krate":0,"index":422},{"krate":0,"index":430},{"krate":0,"index":438}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14009,"byte_end":14017,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":978}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14593,"byte_end":14596,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14813,"byte_end":14826,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":15092,"byte_end":15116,"line_start":97,"line_end":97,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":15376,"byte_end":15379,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":15536,"byte_end":15544,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":15653,"byte_end":15664,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":15860,"byte_end":15866,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":15994,"byte_end":16002,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":16261,"byte_end":16266,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":16364,"byte_end":16371,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" FIXME Not implemented fully yet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":16805,"byte_end":16811,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":17349,"byte_end":17360,"line_start":174,"line_end":174,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"fn (&mut self, value: T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":17759,"byte_end":17763,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":18027,"byte_end":18037,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Difference<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":18488,"byte_end":18508,"line_start":211,"line_end":211,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> SymmetricDifference<'a, T, S, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":18928,"byte_end":18940,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Intersection<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":19384,"byte_end":19389,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":19718,"byte_end":19726,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":20015,"byte_end":20018,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":20215,"byte_end":20223,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"fn <Q> (&self, value: &Q) -> Option<(usize, &T)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":20590,"byte_end":20597,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":20926,"byte_end":20932,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_remove","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":21473,"byte_end":21484,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":21721,"byte_end":21725,"line_start":311,"line_end":311,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_take","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":22290,"byte_end":22299,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":22814,"byte_end":22830,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"fn <Q> (&mut self, value: &Q) -> Option<(usize, T)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":23098,"byte_end":23101,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":23446,"byte_end":23452,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":23693,"byte_end":23697,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":23954,"byte_end":23961,"line_start":378,"line_end":378,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"fn <F> (&mut self, mut compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":24260,"byte_end":24269,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"fn <F> (self, mut cmp: F) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":24597,"byte_end":24602,"line_start":398,"line_end":398,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet`, returning all values as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":24898,"byte_end":24907,"line_start":411,"line_end":411,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"fn (&self, index: usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25171,"byte_end":25188,"line_start":420,"line_end":420,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25309,"byte_end":25317,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25728,"byte_end":25732,"line_start":449,"line_end":449,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":255}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26176,"byte_end":26181,"line_start":471,"line_end":471,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":28459,"byte_end":28470,"line_start":572,"line_end":572,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":28840,"byte_end":28849,"line_start":583,"line_end":583,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":29112,"byte_end":29123,"line_start":590,"line_end":590,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":29255,"byte_end":29265,"line_start":598,"line_end":598,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":30140,"byte_end":30152,"line_start":638,"line_end":638,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31029,"byte_end":31048,"line_start":678,"line_end":678,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31880,"byte_end":31885,"line_start":715,"line_end":715,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":398}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":446},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":1005},{"krate":0,"index":1010},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":512},{"krate":0,"index":1016},{"krate":0,"index":1022},{"krate":0,"index":1027},{"krate":0,"index":1033},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":529},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":554},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":578},{"krate":0,"index":590},{"krate":0,"index":598},{"krate":0,"index":611},{"krate":0,"index":619},{"krate":0,"index":629},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":699},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":750},{"krate":0,"index":755},{"krate":0,"index":760},{"krate":0,"index":765},{"krate":0,"index":770},{"krate":0,"index":775},{"krate":0,"index":780},{"krate":0,"index":785},{"krate":0,"index":790},{"krate":0,"index":795},{"krate":0,"index":800},{"krate":0,"index":805},{"krate":0,"index":810},{"krate":0,"index":815},{"krate":0,"index":820},{"krate":0,"index":825},{"krate":0,"index":830},{"krate":0,"index":835},{"krate":0,"index":840},{"krate":0,"index":845},{"krate":0,"index":849},{"krate":0,"index":853},{"krate":0,"index":858},{"krate":0,"index":862},{"krate":0,"index":867},{"krate":0,"index":872},{"krate":0,"index":876},{"krate":0,"index":884},{"krate":0,"index":892},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":910},{"krate":0,"index":917},{"krate":0,"index":923},{"krate":0,"index":929},{"krate":0,"index":937},{"krate":0,"index":942},{"krate":0,"index":951}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":53922,"byte_end":53930,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":56569,"byte_end":56572,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":56785,"byte_end":56798,"line_start":364,"line_end":364,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":57082,"byte_end":57106,"line_start":375,"line_end":375,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":58032,"byte_end":58035,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":58181,"byte_end":58189,"line_start":409,"line_end":409,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":58282,"byte_end":58293,"line_start":412,"line_end":412,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":58483,"byte_end":58489,"line_start":419,"line_end":419,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":58618,"byte_end":58626,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61190,"byte_end":61198,"line_start":517,"line_end":517,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V>)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61281,"byte_end":61287,"line_start":519,"line_end":519,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V>)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":568},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61117,"byte_end":61122,"line_start":515,"line_end":515,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":575}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61414,"byte_end":61423,"line_start":524,"line_end":524,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61676,"byte_end":61690,"line_start":532,"line_end":532,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, call: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61923,"byte_end":61926,"line_start":541,"line_end":541,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":62178,"byte_end":62183,"line_start":549,"line_end":549,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":62410,"byte_end":62420,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":62928,"byte_end":62938,"line_start":573,"line_end":573,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63160,"byte_end":63173,"line_start":583,"line_end":583,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63334,"byte_end":63337,"line_start":591,"line_end":591,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63376,"byte_end":63379,"line_start":592,"line_end":592,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63456,"byte_end":63463,"line_start":595,"line_end":595,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63803,"byte_end":63808,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63863,"byte_end":63871,"line_start":609,"line_end":609,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64042,"byte_end":64048,"line_start":614,"line_end":614,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64134,"byte_end":64140,"line_start":618,"line_end":618,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64281,"byte_end":64293,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64387,"byte_end":64398,"line_start":629,"line_end":629,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64560,"byte_end":64563,"line_start":637,"line_end":637,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64602,"byte_end":64610,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64714,"byte_end":64719,"line_start":640,"line_end":640,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64766,"byte_end":64772,"line_start":641,"line_end":641,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":65834,"byte_end":65839,"line_start":675,"line_end":675,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":66011,"byte_end":66018,"line_start":682,"line_end":682,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":67586,"byte_end":67592,"line_start":724,"line_end":724,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"fn (&mut self, key: K, value: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":69144,"byte_end":69155,"line_start":760,"line_end":760,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"fn (&mut self, key: K, value: V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":69705,"byte_end":69710,"line_start":777,"line_end":777,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":69925,"byte_end":69929,"line_start":784,"line_end":784,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":70118,"byte_end":70126,"line_start":791,"line_end":791,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":70318,"byte_end":70322,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"fn (&self) -> Keys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":70502,"byte_end":70508,"line_start":805,"line_end":805,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"fn (&self) -> Values<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":70726,"byte_end":70736,"line_start":813,"line_end":813,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":70984,"byte_end":70996,"line_start":822,"line_end":822,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":71278,"byte_end":71281,"line_start":832,"line_end":832,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":71465,"byte_end":71473,"line_start":839,"line_end":839,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"fn <Q> (&self, key: &Q) -> Option<(usize, &K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":71789,"byte_end":71796,"line_start":850,"line_end":850,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":71951,"byte_end":71963,"line_start":856,"line_end":856,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":72991,"byte_end":72997,"line_start":889,"line_end":889,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" NOTE: Same as .swap_remove","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":73538,"byte_end":73549,"line_start":905,"line_end":905,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":74067,"byte_end":74083,"line_start":919,"line_end":919,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":74504,"byte_end":74507,"line_start":933,"line_end":933,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"fn (&mut self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":74855,"byte_end":74861,"line_start":944,"line_end":944,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":75487,"byte_end":75496,"line_start":966,"line_end":966,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":76001,"byte_end":76008,"line_start":980,"line_end":980,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":76305,"byte_end":76314,"line_start":990,"line_end":990,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"fn <F> (mut self, mut cmp: F) -> IntoIter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":76674,"byte_end":76679,"line_start":999,"line_end":999,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap`, returning all key-value pairs as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":77139,"byte_end":77148,"line_start":1020,"line_end":1020,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"fn (&self, index: usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":77406,"byte_end":77419,"line_start":1029,"line_end":1029,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"fn (&mut self, index: usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":77708,"byte_end":77725,"line_start":1038,"line_end":1038,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":93644,"byte_end":93648,"line_start":1458,"line_end":1458,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":749}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94124,"byte_end":94130,"line_start":1480,"line_end":1480,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":785},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94610,"byte_end":94619,"line_start":1502,"line_end":1502,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95115,"byte_end":95119,"line_start":1524,"line_end":1524,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":809}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":825},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95592,"byte_end":95599,"line_start":1546,"line_end":1546,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":845},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96094,"byte_end":96102,"line_start":1568,"line_end":1568,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":848}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96566,"byte_end":96571,"line_start":1590,"line_end":1590,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":866}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":5588,"byte_end":5596,"line_start":14,"line_end":14,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":6118,"byte_end":6133,"line_start":32,"line_end":32,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":6837,"byte_end":6845,"line_start":57,"line_end":57,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":7228,"byte_end":7236,"line_start":73,"line_end":73,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":7717,"byte_end":7732,"line_start":90,"line_end":90,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":8386,"byte_end":8394,"line_start":114,"line_end":114,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/equivalent.rs","byte_start":9687,"byte_end":9688,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":11517,"byte_end":11525,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14098,"byte_end":14106,"line_start":63,"line_end":63,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14521,"byte_end":14529,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14920,"byte_end":14928,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":16069,"byte_end":16077,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":24738,"byte_end":24746,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25383,"byte_end":25391,"line_start":430,"line_end":430,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25488,"byte_end":25496,"line_start":436,"line_end":436,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25640,"byte_end":25648,"line_start":442,"line_end":442,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25812,"byte_end":25816,"line_start":453,"line_end":453,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25929,"byte_end":25933,"line_start":459,"line_end":459,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26089,"byte_end":26093,"line_start":465,"line_end":465,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26260,"byte_end":26265,"line_start":475,"line_end":475,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26370,"byte_end":26375,"line_start":481,"line_end":481,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26697,"byte_end":26705,"line_start":497,"line_end":497,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26974,"byte_end":26982,"line_start":511,"line_end":511,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27260,"byte_end":27268,"line_start":521,"line_end":521,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27523,"byte_end":27531,"line_start":531,"line_end":531,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27779,"byte_end":27787,"line_start":542,"line_end":542,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27996,"byte_end":28004,"line_start":551,"line_end":551,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":28229,"byte_end":28237,"line_start":561,"line_end":561,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":28309,"byte_end":28317,"line_start":567,"line_end":567,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":330},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":29371,"byte_end":29381,"line_start":603,"line_end":603,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":29824,"byte_end":29834,"line_start":623,"line_end":623,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":30258,"byte_end":30270,"line_start":643,"line_end":643,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":30712,"byte_end":30724,"line_start":663,"line_end":663,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31177,"byte_end":31196,"line_start":682,"line_end":682,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31662,"byte_end":31681,"line_start":704,"line_end":704,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31989,"byte_end":31994,"line_start":719,"line_end":719,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":32422,"byte_end":32427,"line_start":740,"line_end":740,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47269,"byte_end":47278,"line_start":36,"line_end":36,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47595,"byte_end":47604,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47632,"byte_end":47641,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47726,"byte_end":47735,"line_start":53,"line_end":53,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47963,"byte_end":47972,"line_start":62,"line_end":62,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":48231,"byte_end":48240,"line_start":72,"line_end":72,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":49138,"byte_end":49141,"line_start":97,"line_end":97,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":49227,"byte_end":49230,"line_start":102,"line_end":102,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":49454,"byte_end":49457,"line_start":111,"line_end":111,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":52007,"byte_end":52021,"line_start":203,"line_end":203,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":54841,"byte_end":54849,"line_start":298,"line_end":298,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":56494,"byte_end":56502,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":56900,"byte_end":56908,"line_start":369,"line_end":369,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":58899,"byte_end":58911,"line_start":441,"line_end":441,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61330,"byte_end":61335,"line_start":522,"line_end":522,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63297,"byte_end":63310,"line_start":590,"line_end":590,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64525,"byte_end":64536,"line_start":636,"line_end":636,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":65371,"byte_end":65379,"line_start":660,"line_end":660,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":76967,"byte_end":76975,"line_start":1014,"line_end":1014,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":78305,"byte_end":78317,"line_start":1055,"line_end":1055,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":93750,"byte_end":93754,"line_start":1462,"line_end":1462,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":93873,"byte_end":93877,"line_start":1468,"line_end":1468,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94034,"byte_end":94038,"line_start":1474,"line_end":1474,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94221,"byte_end":94227,"line_start":1484,"line_end":1484,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94348,"byte_end":94354,"line_start":1490,"line_end":1490,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94518,"byte_end":94524,"line_start":1496,"line_end":1496,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94713,"byte_end":94722,"line_start":1506,"line_end":1506,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94847,"byte_end":94856,"line_start":1512,"line_end":1512,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95020,"byte_end":95029,"line_start":1518,"line_end":1518,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95210,"byte_end":95214,"line_start":1528,"line_end":1528,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95339,"byte_end":95343,"line_start":1534,"line_end":1534,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95502,"byte_end":95506,"line_start":1540,"line_end":1540,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95693,"byte_end":95700,"line_start":1550,"line_end":1550,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95832,"byte_end":95839,"line_start":1556,"line_end":1556,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96001,"byte_end":96008,"line_start":1562,"line_end":1562,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96186,"byte_end":96194,"line_start":1572,"line_end":1572,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96312,"byte_end":96320,"line_start":1578,"line_end":1578,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96476,"byte_end":96484,"line_start":1584,"line_end":1584,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96691,"byte_end":96696,"line_start":1594,"line_end":1594,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96818,"byte_end":96823,"line_start":1600,"line_end":1600,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":97439,"byte_end":97447,"line_start":1627,"line_end":1627,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":97779,"byte_end":97787,"line_start":1642,"line_end":1642,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":98370,"byte_end":98378,"line_start":1663,"line_end":1663,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":98764,"byte_end":98772,"line_start":1678,"line_end":1678,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":99360,"byte_end":99368,"line_start":1696,"line_end":1696,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":100082,"byte_end":100090,"line_start":1714,"line_end":1714,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":100496,"byte_end":100504,"line_start":1727,"line_end":1727,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":100738,"byte_end":100746,"line_start":1736,"line_end":1736,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":101115,"byte_end":101123,"line_start":1751,"line_end":1751,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1097,"byte_end":1106,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1186,"byte_end":1195,"line_start":50,"line_end":50,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1271,"byte_end":1280,"line_start":54,"line_end":54,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1482,"byte_end":1488,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":805,"byte_end":808,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":137}},{"kind":"Mod","span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":818,"byte_end":821,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":446}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":5588,"byte_end":5596,"line_start":14,"line_end":14,"column_start":29,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1016},"to":{"krate":13,"index":1621}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":6118,"byte_end":6133,"line_start":32,"line_end":32,"column_start":37,"column_end":52},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":44},"to":{"krate":13,"index":1262}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":6837,"byte_end":6845,"line_start":57,"line_end":57,"column_start":41,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1016},"to":{"krate":13,"index":1178}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":7228,"byte_end":7236,"line_start":73,"line_end":73,"column_start":26,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":975},"to":{"krate":13,"index":1621}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":7717,"byte_end":7732,"line_start":90,"line_end":90,"column_start":34,"column_end":49},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":72},"to":{"krate":13,"index":1262}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/serde.rs","byte_start":8386,"byte_end":8394,"line_start":114,"line_end":114,"column_start":38,"column_end":46},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":975},"to":{"krate":13,"index":1178}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/equivalent.rs","byte_start":9687,"byte_end":9688,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":108},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/mutable_keys.rs","byte_start":11517,"byte_end":11525,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1016},"to":{"krate":0,"index":118}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14098,"byte_end":14106,"line_start":63,"line_end":63,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14521,"byte_end":14529,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":14920,"byte_end":14928,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":16069,"byte_end":16077,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":24738,"byte_end":24746,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25383,"byte_end":25391,"line_start":430,"line_end":430,"column_start":22,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25488,"byte_end":25496,"line_start":436,"line_end":436,"column_start":33,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25640,"byte_end":25648,"line_start":442,"line_end":442,"column_start":31,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25812,"byte_end":25816,"line_start":453,"line_end":453,"column_start":26,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":25929,"byte_end":25933,"line_start":459,"line_end":459,"column_start":37,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26089,"byte_end":26093,"line_start":465,"line_end":465,"column_start":35,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26260,"byte_end":26265,"line_start":475,"line_end":475,"column_start":26,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26370,"byte_end":26375,"line_start":481,"line_end":481,"column_start":37,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26697,"byte_end":26705,"line_start":497,"line_end":497,"column_start":29,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":3333}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":26974,"byte_end":26982,"line_start":511,"line_end":511,"column_start":32,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":3329}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27260,"byte_end":27268,"line_start":521,"line_end":521,"column_start":26,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":3342}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27523,"byte_end":27531,"line_start":531,"line_end":531,"column_start":34,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":3342}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27779,"byte_end":27787,"line_start":542,"line_end":542,"column_start":24,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":27996,"byte_end":28004,"line_start":551,"line_end":551,"column_start":48,"column_end":56},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":28229,"byte_end":28237,"line_start":561,"line_end":561,"column_start":19,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":28309,"byte_end":28317,"line_start":567,"line_end":567,"column_start":12,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":29371,"byte_end":29381,"line_start":603,"line_end":603,"column_start":29,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":29824,"byte_end":29834,"line_start":623,"line_end":623,"column_start":40,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":30258,"byte_end":30270,"line_start":643,"line_end":643,"column_start":29,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":30712,"byte_end":30724,"line_start":663,"line_end":663,"column_start":40,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31177,"byte_end":31196,"line_start":682,"line_end":682,"column_start":34,"column_end":53},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31662,"byte_end":31681,"line_start":704,"line_end":704,"column_start":45,"column_end":64},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":31989,"byte_end":31994,"line_start":719,"line_end":719,"column_start":29,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/set.rs","byte_start":32422,"byte_end":32427,"line_start":740,"line_end":740,"column_start":40,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47269,"byte_end":47278,"line_start":36,"line_end":36,"column_start":10,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47595,"byte_end":47604,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1394}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47632,"byte_end":47641,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2002}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47726,"byte_end":47735,"line_start":53,"line_end":53,"column_start":24,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":47963,"byte_end":47972,"line_start":62,"line_end":62,"column_start":35,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":48231,"byte_end":48240,"line_start":72,"line_end":72,"column_start":34,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":49138,"byte_end":49141,"line_start":97,"line_end":97,"column_start":16,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":2002}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":49227,"byte_end":49230,"line_start":102,"line_end":102,"column_start":21,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":49454,"byte_end":49457,"line_start":111,"line_end":111,"column_start":6,"column_end":9},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":52007,"byte_end":52021,"line_start":203,"line_end":203,"column_start":10,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":54841,"byte_end":54849,"line_start":298,"line_end":298,"column_start":30,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":56494,"byte_end":56502,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":56900,"byte_end":56908,"line_start":369,"line_end":369,"column_start":15,"column_end":23},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":58899,"byte_end":58911,"line_start":441,"line_end":441,"column_start":12,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":61330,"byte_end":61335,"line_start":522,"line_end":522,"column_start":16,"column_end":21},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":63297,"byte_end":63310,"line_start":590,"line_end":590,"column_start":16,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":64525,"byte_end":64536,"line_start":636,"line_end":636,"column_start":16,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":65371,"byte_end":65379,"line_start":660,"line_end":660,"column_start":15,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":76967,"byte_end":76975,"line_start":1014,"line_end":1014,"column_start":15,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":78305,"byte_end":78317,"line_start":1055,"line_end":1055,"column_start":12,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":93750,"byte_end":93754,"line_start":1462,"line_end":1462,"column_start":29,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":93873,"byte_end":93877,"line_start":1468,"line_end":1468,"column_start":40,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94034,"byte_end":94038,"line_start":1474,"line_end":1474,"column_start":38,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94221,"byte_end":94227,"line_start":1484,"line_end":1484,"column_start":29,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94348,"byte_end":94354,"line_start":1490,"line_end":1490,"column_start":40,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94518,"byte_end":94524,"line_start":1496,"line_end":1496,"column_start":38,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94713,"byte_end":94722,"line_start":1506,"line_end":1506,"column_start":29,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":94847,"byte_end":94856,"line_start":1512,"line_end":1512,"column_start":40,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95020,"byte_end":95029,"line_start":1518,"line_end":1518,"column_start":38,"column_end":47},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95210,"byte_end":95214,"line_start":1528,"line_end":1528,"column_start":29,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95339,"byte_end":95343,"line_start":1534,"line_end":1534,"column_start":40,"column_end":44},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95502,"byte_end":95506,"line_start":1540,"line_end":1540,"column_start":38,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95693,"byte_end":95700,"line_start":1550,"line_end":1550,"column_start":29,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":825},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":95832,"byte_end":95839,"line_start":1556,"line_end":1556,"column_start":40,"column_end":47},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":825},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96001,"byte_end":96008,"line_start":1562,"line_end":1562,"column_start":38,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":825},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96186,"byte_end":96194,"line_start":1572,"line_end":1572,"column_start":25,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":845},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96312,"byte_end":96320,"line_start":1578,"line_end":1578,"column_start":40,"column_end":48},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":845},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96476,"byte_end":96484,"line_start":1584,"line_end":1584,"column_start":34,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":845},"to":{"krate":2,"index":3321}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96691,"byte_end":96696,"line_start":1594,"line_end":1594,"column_start":29,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":96818,"byte_end":96823,"line_start":1600,"line_end":1600,"column_start":40,"column_end":45},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":3301}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":97439,"byte_end":97447,"line_start":1627,"line_end":1627,"column_start":32,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":3333}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":97779,"byte_end":97787,"line_start":1642,"line_end":1642,"column_start":47,"column_end":55},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":1626}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":98370,"byte_end":98378,"line_start":1663,"line_end":1663,"column_start":50,"column_end":58},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":1630}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":98764,"byte_end":98772,"line_start":1678,"line_end":1678,"column_start":40,"column_end":48},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":3329}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":99360,"byte_end":99368,"line_start":1696,"line_end":1696,"column_start":34,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":3342}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":100082,"byte_end":100090,"line_start":1714,"line_end":1714,"column_start":46,"column_end":54},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":3342}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":100496,"byte_end":100504,"line_start":1727,"line_end":1727,"column_start":27,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":100738,"byte_end":100746,"line_start":1736,"line_end":1736,"column_start":60,"column_end":68},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/map.rs","byte_start":101115,"byte_end":101123,"line_start":1751,"line_end":1751,"column_start":22,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1097,"byte_end":1106,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1186,"byte_end":1195,"line_start":50,"line_end":50,"column_start":16,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":2002}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1271,"byte_end":1280,"line_start":54,"line_end":54,"column_start":20,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/riccardo/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.0.2/src/lib.rs","byte_start":1482,"byte_end":1488,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}}]}